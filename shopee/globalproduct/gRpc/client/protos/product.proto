syntax = "proto3";

package product;

service ProductController {
    rpc List(ProductListRequest) returns (stream ProductDetails) {}
    rpc Create(ProductDetails) returns (ProductResponse) {}
    rpc Retrieve(RetrieveRequest) returns (ProductResponse) {}
    rpc Update(Product) returns (ProductResponse) {}
    rpc Destroy(Product) returns (ProductResponse) {}
    rpc Query(ProductQueryRequest) returns (stream ProductDetails) {}
    rpc CreateSpecification(Specification) returns (SpecificationResponse) {}
}

message ProductOption {
    int32 id = 1;
    int32 spec_index = 2;
    int32 index = 3;
    string name = 4;
    string image= 5;
}

message Specification {
    int32 id = 1;
    int32 product_id = 2;
    string name = 3;
    int32 index = 4;
    repeated ProductOption options = 5;
}

message SupplierInfo {
    int32 id = 1;
    string url = 2;
    float logistics_costs = 3;
    int32 min_purchase_num = 4;
    int32 delivery_days = 5;
    string supplier_name = 6;
}

enum ProductStatus {
    EDIT = 0;
    PUBLISH_READY = 1;
    PUBLISH = 2;
}

message Product {
    int32 id = 1;
    string sku = 2;
    ProductStatus status = 3;
    string image = 5;
    string name = 6;
    string desc = 7;
    bool second_hand = 9;
    repeated int32 models = 10;
}

message ProductMedia {
    int32 id = 1;
    int32 type = 2; // 1: video, 2: image
    int32 index = 3;
    string url = 4;
}

message ProductModel {
    int32 id = 1;
    string sku = 2;
    string name = 3;
    int32 stock_qty = 4;
    float price = 5;
    string options_index = 6;
}

message ProductExtra {
    Specification firstSpec = 1;
    Specification secondSpec = 2;
    repeated string publish_id = 3;
    repeated ProductModel models = 4;
    repeated ProductMedia media = 5;
    SupplierInfo supplierInfo = 6;
}

message ProductDetails {
    Product product = 1;
    ProductExtra extra = 2;
}

message FieldSelector {
    bool specification = 1;
    bool option = 2;
    bool publish_id = 3;
    bool models = 4;
    bool media = 5;
    bool supplierInfo = 6;
}

message ProductListRequest {
    FieldSelector selector = 1;
}

message RetrieveRequest {
    int32 id = 1;
    FieldSelector selector = 2;
}

message ProductQueryRequest {
    string sku = 1;
    string publish_id = 2;
    FieldSelector selector = 3;
}

message AlterModelRequest {
    repeated Product models = 1;
}

enum ActionCode {
    SUCCESS = 0;
    PRODUCT_NOT_FOUND = 1;
    SPECIFICATION_NOT_FOUND = 2;
    ILLEGAL_PARAMETERS = 3;
    MISSING_PARAMETERS = 4;
    STORAGE_EXCEPTION = 5;
}

message ProductResponse {
    ActionCode code = 1;
    string msg = 2;
    Product product = 3;
    ProductExtra extra = 4;
}

message SpecificationResponse {
    ActionCode code = 1;
    string msg = 2;
    Specification specification = 3;
}

message OptionResponse {
    ActionCode code = 1;
    string msg = 2;
    ProductOption option = 3;
}